import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Lightbulb, TrendingUp, AlertTriangle, Calendar } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '../../common/Layout/Card';
export const BusinessInsights = ({ data, loading = false, }) => {
    if (loading) {
        return (_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx(CardTitle, { children: "Business Insights" }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-4", children: [1, 2, 3].map((i) => (_jsxs("div", { className: "animate-pulse", children: [_jsx("div", { className: "h-4 bg-gray-200 rounded w-1/3 mb-2" }), _jsx("div", { className: "h-20 bg-gray-200 rounded" })] }, i))) }) })] }));
    }
    const getTrendIcon = (trend) => {
        switch (trend) {
            case 'high': return _jsx(TrendingUp, { className: "h-4 w-4 text-green-600" });
            case 'low': return _jsx(AlertTriangle, { className: "h-4 w-4 text-red-600" });
            default: return _jsx(Calendar, { className: "h-4 w-4 text-blue-600" });
        }
    };
    const getTrendColor = (trend) => {
        switch (trend) {
            case 'high': return 'bg-green-50 border-green-200';
            case 'low': return 'bg-red-50 border-red-200';
            default: return 'bg-blue-50 border-blue-200';
        }
    };
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(TrendingUp, { className: "h-5 w-5 text-green-600" }), "High Performing Sectors"] }) }), _jsx(CardContent, { children: data.high_performing_sectors.length === 0 ? (_jsx("p", { className: "text-gray-600", children: "No standout performing sectors identified in current data." })) : (_jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-3", children: data.high_performing_sectors.map((sector, index) => (_jsxs("div", { className: "p-3 bg-green-50 border border-green-200 rounded-lg", children: [_jsx("div", { className: "font-medium text-green-900", children: sector }), _jsx("p", { className: "text-sm text-green-700", children: "Strong performance metrics" })] }, index))) })) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(AlertTriangle, { className: "h-5 w-5 text-orange-600" }), "Risk Concentrations"] }) }), _jsx(CardContent, { children: Object.keys(data.risk_concentrations).length === 0 ? (_jsx("p", { className: "text-gray-600", children: "No significant risk concentrations detected." })) : (_jsx("div", { className: "space-y-3", children: Object.entries(data.risk_concentrations).map(([sector, percentage]) => (_jsxs("div", { className: "flex items-center justify-between p-3 bg-orange-50 border border-orange-200 rounded-lg", children: [_jsxs("div", { children: [_jsx("div", { className: "font-medium text-orange-900", children: sector }), _jsx("p", { className: "text-sm text-orange-700", children: "High risk concentration" })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "text-lg font-bold text-orange-600", children: [percentage, "%"] }), _jsx("p", { className: "text-xs text-orange-600", children: "Risk rate" })] })] }, sector))) })) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Calendar, { className: "h-5 w-5 text-blue-600" }), "Seasonal Patterns"] }) }), _jsx(CardContent, { children: _jsx("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-3", children: data.seasonal_patterns.map((pattern, index) => (_jsxs("div", { className: `p-3 border rounded-lg ${getTrendColor(pattern.trend)}`, children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("span", { className: "font-medium", children: pattern.month }), getTrendIcon(pattern.trend)] }), _jsxs("div", { className: "text-sm", children: [_jsxs("div", { children: ["Avg Score: ", pattern.avg_score.toFixed(1)] }), _jsxs("div", { children: ["Apps: ", pattern.applications] })] })] }, index))) }) })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Lightbulb, { className: "h-5 w-5 text-yellow-600" }), "AI Recommendations"] }) }), _jsx(CardContent, { children: _jsx("div", { className: "space-y-3", children: data.recommendations.map((recommendation, index) => (_jsxs("div", { className: "flex items-start gap-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg", children: [_jsx(Lightbulb, { className: "h-5 w-5 text-yellow-600 mt-0.5 flex-shrink-0" }), _jsx("p", { className: "text-sm text-yellow-900", children: recommendation })] }, index))) }) })] })] }));
};
