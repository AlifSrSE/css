import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { AlertTriangle, Shield, TrendingUp, Eye, ChevronDown, ChevronUp } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '../../common/Layout/Card';
import { Button } from '../../common/Forms/Button';
import { StatusBadge } from '../../common/Tables/StatusBadge';
import { cn } from '../../../utils/cn';
export const RiskAssessment = ({ score, className, onMitigationAction, }) => {
    const [expandedFlags, setExpandedFlags] = useState([]);
    const [activeTab, setActiveTab] = useState('overview');
    const toggleFlag = (flagName) => {
        setExpandedFlags(prev => prev.includes(flagName)
            ? prev.filter(f => f !== flagName)
            : [...prev, flagName]);
    };
    const getRiskColor = (level) => {
        const colors = {
            low: 'text-green-600',
            medium: 'text-yellow-600',
            high: 'text-orange-600',
            very_high: 'text-red-600',
        };
        return colors[level] || 'text-gray-600';
    };
    const getRiskIcon = (level) => {
        if (level === 'low')
            return _jsx(Shield, { className: "h-6 w-6 text-green-600" });
        if (level === 'medium')
            return _jsx(AlertTriangle, { className: "h-6 w-6 text-yellow-600" });
        return _jsx(AlertTriangle, { className: "h-6 w-6 text-red-600" });
    };
    const hardFlags = score.red_flags.filter(flag => flag.flag_type === 'hard');
    const softFlags = score.red_flags.filter(flag => flag.flag_type === 'soft');
    return (_jsxs("div", { className: cn('space-y-6', className), children: [_jsxs(Card, { children: [_jsx(CardHeader, { children: _jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(AlertTriangle, { className: "h-5 w-5" }), "Risk Assessment Overview"] }) }), _jsxs(CardContent, { children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsxs("div", { className: "text-center", children: [getRiskIcon(score.risk_level), _jsxs("h3", { className: cn('text-lg font-semibold mt-2', getRiskColor(score.risk_level)), children: [score.risk_level.replace('_', ' ').toUpperCase(), " RISK"] }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: "Overall Assessment" })] }), _jsxs("div", { className: "text-center", children: [_jsxs("div", { className: "text-3xl font-bold text-red-600", children: [(score.default_probability * 100).toFixed(1), "%"] }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: "Default Probability" })] }), _jsxs("div", { className: "text-center", children: [_jsx("div", { className: "text-3xl font-bold text-orange-600", children: score.red_flags.length }), _jsx("p", { className: "text-sm text-gray-600 mt-1", children: "Risk Flags" }), _jsxs("div", { className: "flex justify-center gap-2 mt-2", children: [hardFlags.length > 0 && (_jsxs("span", { className: "text-xs bg-red-100 text-red-800 px-2 py-1 rounded", children: [hardFlags.length, " Hard"] })), softFlags.length > 0 && (_jsxs("span", { className: "text-xs bg-yellow-100 text-yellow-800 px-2 py-1 rounded", children: [softFlags.length, " Soft"] }))] })] })] }), _jsxs("div", { className: "mt-6 p-4 bg-gray-50 rounded-lg", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "Risk Level Implications:" }), _jsxs("p", { className: "text-sm text-gray-700", children: [score.risk_level === 'low' &&
                                                'Low risk borrower with strong repayment capacity. Suitable for standard loan terms with minimal monitoring requirements.', score.risk_level === 'medium' &&
                                                'Medium risk borrower requiring regular monitoring. Standard loan terms with periodic review recommended.', score.risk_level === 'high' &&
                                                'High risk borrower requiring enhanced monitoring and stricter loan terms. Additional collateral or guarantor recommended.', score.risk_level === 'very_high' &&
                                                'Very high risk borrower. Loan approval not recommended unless significant risk mitigation measures are implemented.'] })] })] })] }), _jsxs(Card, { children: [_jsx(CardHeader, { children: _jsx("div", { className: "flex space-x-1", children: [
                                { key: 'overview', label: 'Risk Breakdown' },
                                { key: 'flags', label: 'Risk Flags' },
                                { key: 'mitigation', label: 'Mitigation' },
                            ].map((tab) => (_jsx(Button, { variant: activeTab === tab.key ? 'default' : 'ghost', size: "sm", onClick: () => setActiveTab(tab.key), children: tab.label }, tab.key))) }) }), _jsxs(CardContent, { children: [activeTab === 'overview' && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-3", children: [_jsx("h4", { className: "font-medium text-gray-900", children: "Risk Factors" }), _jsxs("div", { className: "flex justify-between items-center p-3 bg-gray-50 rounded", children: [_jsx("span", { className: "text-sm font-medium", children: "Credit Risk" }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx("div", { className: "w-20 bg-gray-200 rounded-full h-2", children: _jsx("div", { className: "bg-red-500 h-2 rounded-full", style: { width: `${Math.min(100, (score.credit_ratios_breakdown.filter(r => r.band === 'red').length / score.credit_ratios_breakdown.length) * 100)}%` } }) }), _jsxs("span", { className: "text-sm text-gray-600", children: [score.credit_ratios_breakdown.filter(r => r.band === 'red').length, " red ratios"] })] })] }), _jsxs("div", { className: "flex justify-between items-center p-3 bg-gray-50 rounded", children: [_jsx("span", { className: "text-sm font-medium", children: "Business Risk" }), _jsx("div", { className: "flex items-center gap-2", children: _jsx(StatusBadge, { status: score.risk_level }) })] })] }), _jsxs("div", { className: "space-y-3", children: [_jsx("h4", { className: "font-medium text-gray-900", children: "Performance Indicators" }), _jsxs("div", { className: "flex justify-between items-center p-3 bg-gray-50 rounded", children: [_jsx("span", { className: "text-sm font-medium", children: "Data Points" }), _jsx("div", { className: "flex items-center gap-2", children: _jsxs("span", { className: "text-lg font-semibold text-purple-600", children: [score.data_points_score, "/100"] }) })] }), _jsxs("div", { className: "flex justify-between items-center p-3 bg-gray-50 rounded", children: [_jsx("span", { className: "text-sm font-medium", children: "5C Attributes" }), _jsx("div", { className: "flex items-center gap-2", children: _jsxs("span", { className: "text-lg font-semibold text-green-600", children: [score.borrower_attributes_score, "/100"] }) })] })] })] }), _jsxs("div", { className: "mt-6 p-4 bg-blue-50 rounded-lg", children: [_jsxs("h4", { className: "font-medium text-blue-900 mb-2 flex items-center gap-2", children: [_jsx(TrendingUp, { className: "h-4 w-4" }), "Risk Trend Analysis"] }), _jsxs("p", { className: "text-sm text-blue-800", children: ["Based on the current risk profile, this borrower shows", ' ', score.risk_level === 'low' ? 'stable' :
                                                        score.risk_level === 'medium' ? 'manageable' : 'concerning', " risk characteristics. Regular monitoring is ", score.risk_level === 'low' ? 'minimal' :
                                                        score.risk_level === 'medium' ? 'standard' : 'enhanced', " recommended."] })] })] })), activeTab === 'flags' && (_jsx("div", { className: "space-y-4", children: score.red_flags.length === 0 ? (_jsxs("div", { className: "text-center py-8", children: [_jsx(Shield, { className: "h-12 w-12 text-green-600 mx-auto mb-4" }), _jsx("h3", { className: "text-lg font-medium text-green-900", children: "No Risk Flags" }), _jsx("p", { className: "text-green-700", children: "This application has no identified risk flags." })] })) : (_jsxs("div", { className: "space-y-3", children: [hardFlags.length > 0 && (_jsxs("div", { children: [_jsxs("h4", { className: "font-medium text-red-900 mb-3 flex items-center gap-2", children: [_jsx(AlertTriangle, { className: "h-4 w-4" }), "Hard Risk Flags (", hardFlags.length, ")"] }), hardFlags.map((flag, index) => (_jsx(RiskFlagItem, { flag: flag, expanded: expandedFlags.includes(flag.flag_name), onToggle: () => toggleFlag(flag.flag_name), onAction: onMitigationAction }, `hard-${index}`)))] })), softFlags.length > 0 && (_jsxs("div", { children: [_jsxs("h4", { className: "font-medium text-yellow-900 mb-3 flex items-center gap-2", children: [_jsx(AlertTriangle, { className: "h-4 w-4" }), "Soft Risk Flags (", softFlags.length, ")"] }), softFlags.map((flag, index) => (_jsx(RiskFlagItem, { flag: flag, expanded: expandedFlags.includes(flag.flag_name), onToggle: () => toggleFlag(flag.flag_name), onAction: onMitigationAction }, `soft-${index}`)))] }))] })) })), activeTab === 'mitigation' && (_jsxs("div", { className: "space-y-4", children: [_jsx("h4", { className: "font-medium text-gray-900", children: "Recommended Risk Mitigation Strategies" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "space-y-3", children: [_jsx("h5", { className: "font-medium text-red-900", children: "Immediate Actions Required" }), hardFlags.length > 0 ? (_jsx("div", { className: "space-y-2", children: hardFlags.map((flag, index) => (_jsxs("div", { className: "p-3 bg-red-50 border border-red-200 rounded", children: [_jsx("p", { className: "text-sm font-medium text-red-900", children: flag.flag_name }), _jsx("p", { className: "text-xs text-red-700 mt-1", children: flag.impact }), _jsx(Button, { size: "sm", variant: "destructive", className: "mt-2", onClick: () => onMitigationAction === null || onMitigationAction === void 0 ? void 0 : onMitigationAction('address_hard_flag', flag.flag_name), children: "Address Flag" })] }, index))) })) : (_jsx("p", { className: "text-sm text-green-700 bg-green-50 p-3 rounded", children: "No immediate actions required." }))] }), _jsxs("div", { className: "space-y-3", children: [_jsx("h5", { className: "font-medium text-yellow-900", children: "Monitoring & Follow-up" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "p-3 bg-yellow-50 border border-yellow-200 rounded", children: [_jsx("p", { className: "text-sm font-medium text-yellow-900", children: score.risk_level === 'low' ? 'Quarterly Review' :
                                                                            score.risk_level === 'medium' ? 'Monthly Review' :
                                                                                'Weekly Review' }), _jsx("p", { className: "text-xs text-yellow-700 mt-1", children: "Regular monitoring of payment behavior and business performance" })] }), softFlags.length > 0 && (_jsxs("div", { className: "p-3 bg-yellow-50 border border-yellow-200 rounded", children: [_jsx("p", { className: "text-sm font-medium text-yellow-900", children: "Address Soft Flags" }), _jsxs("p", { className: "text-xs text-yellow-700 mt-1", children: [softFlags.length, " soft flag(s) require attention and improvement plans"] }), _jsx(Button, { size: "sm", variant: "outline", className: "mt-2", onClick: () => onMitigationAction === null || onMitigationAction === void 0 ? void 0 : onMitigationAction('create_improvement_plan', 'soft_flags'), children: "Create Improvement Plan" })] }))] })] })] }), _jsxs("div", { className: "mt-6 p-4 bg-blue-50 rounded-lg", children: [_jsx("h5", { className: "font-medium text-blue-900 mb-2", children: "Success Metrics to Monitor" }), _jsxs("ul", { className: "text-sm text-blue-800 space-y-1", children: [_jsx("li", { children: "\u2022 Payment punctuality (target: 100% on-time payments)" }), _jsx("li", { children: "\u2022 Business revenue stability (target: <20% month-over-month variation)" }), _jsx("li", { children: "\u2022 Debt service coverage ratio (target: >1.25)" }), _jsx("li", { children: "\u2022 Cash flow positive months (target: 100%)" })] })] })] }))] })] })] }));
};
const RiskFlagItem = ({ flag, expanded, onToggle, onAction }) => {
    const getSeverityColor = (severity) => {
        const colors = {
            low: 'border-yellow-200 bg-yellow-50',
            medium: 'border-orange-200 bg-orange-50',
            high: 'border-red-200 bg-red-50',
            critical: 'border-red-300 bg-red-100',
        };
        return colors[severity] || 'border-gray-200 bg-gray-50';
    };
    const getSeverityTextColor = (severity) => {
        const colors = {
            low: 'text-yellow-900',
            medium: 'text-orange-900',
            high: 'text-red-900',
            critical: 'text-red-900',
        };
        return colors[severity] || 'text-gray-900';
    };
    return (_jsxs("div", { className: cn('border rounded-lg p-4', getSeverityColor(flag.severity)), children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-3", children: [_jsx(AlertTriangle, { className: cn('h-5 w-5', flag.severity === 'critical' ? 'text-red-600' :
                                    flag.severity === 'high' ? 'text-red-600' :
                                        flag.severity === 'medium' ? 'text-orange-600' : 'text-yellow-600') }), _jsxs("div", { children: [_jsx("h5", { className: cn('font-medium', getSeverityTextColor(flag.severity)), children: flag.flag_name }), _jsxs("div", { className: "flex items-center gap-2 mt-1", children: [_jsx("span", { className: cn('text-xs px-2 py-1 rounded uppercase font-medium', flag.flag_type === 'hard' ? 'bg-red-200 text-red-800' : 'bg-yellow-200 text-yellow-800'), children: flag.flag_type }), _jsx("span", { className: cn('text-xs px-2 py-1 rounded capitalize', getSeverityColor(flag.severity)), children: flag.severity })] })] })] }), _jsx(Button, { variant: "ghost", size: "sm", onClick: onToggle, children: expanded ? _jsx(ChevronUp, { className: "h-4 w-4" }) : _jsx(ChevronDown, { className: "h-4 w-4" }) })] }), expanded && (_jsxs("div", { className: "mt-4 space-y-3", children: [_jsxs("p", { className: cn('text-sm', getSeverityTextColor(flag.severity)), children: [_jsx("strong", { children: "Description:" }), " ", flag.description] }), _jsxs("p", { className: cn('text-sm', getSeverityTextColor(flag.severity)), children: [_jsx("strong", { children: "Impact:" }), " ", flag.impact] }), _jsxs("div", { className: "flex gap-2 pt-2", children: [_jsxs(Button, { size: "sm", variant: "outline", onClick: () => onAction === null || onAction === void 0 ? void 0 : onAction('view_details', flag.flag_name), children: [_jsx(Eye, { className: "h-3 w-3 mr-1" }), "View Details"] }), flag.flag_type === 'soft' && (_jsx(Button, { size: "sm", variant: "outline", onClick: () => onAction === null || onAction === void 0 ? void 0 : onAction('create_action_plan', flag.flag_name), children: "Create Action Plan" }))] })] }))] }));
};
