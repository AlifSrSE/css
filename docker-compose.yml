# docker-compose.yml
version: '3.8'

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: credit_scoring_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: credit_scoring
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - credit_scoring_network

  # Redis
  redis:
    image: redis:7.2-alpine
    container_name: credit_scoring_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - credit_scoring_network

  # Backend (Django)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: credit_scoring_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/credit_scoring?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./backend/logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - credit_scoring_network
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]

  # Celery Worker
  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: credit_scoring_celery
    restart: unless-stopped
    environment:
      - DEBUG=True
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/credit_scoring?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb
      - redis
    networks:
      - credit_scoring_network
    command: ["celery", "-A", "credit_scoring", "worker", "--loglevel=info"]

  # Celery Beat (Scheduler)
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: credit_scoring_celery_beat
    restart: unless-stopped
    environment:
      - DEBUG=True
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/credit_scoring?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
    depends_on:
      - mongodb
      - redis
    networks:
      - credit_scoring_network
    command: ["celery", "-A", "credit_scoring", "beat", "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: credit_scoring_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000/api/
      - REACT_APP_ENVIRONMENT=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - credit_scoring_network
    command: ["npm", "start"]

  # Nginx (Production only)
  nginx:
    image: nginx:alpine
    container_name: credit_scoring_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./backend/staticfiles:/var/www/static:ro
      - ./backend/media:/var/www/media:ro
    depends_on:
      - backend
      - frontend
    networks:
      - credit_scoring_network
    profiles:
      - production

volumes:
  mongodb_data:
  redis_data:

networks:
  credit_scoring_network:
    driver: bridge
